function dfs_cycle_detection(graph):
    function dfs(node, visited, rec_stack):
        mark node as visited
        add node to rec_stack
        
        for each neighbor in graph.neighbors(node):
            if neighbor is not visited and dfs(neighbor, visited, rec_stack):
                return True
            elif neighbor is in rec_stack:
                return True
        
        remove node from rec_stack
        return False
    
    //initialize visited as a dictionary with all nodes set to False
    //initialize rec_stack as a dictionary with all nodes set to False
    
    for each node in graph.nodes:
        if node is not visited:
            if dfs(node, visited, rec_stack):
                return True
    return False
